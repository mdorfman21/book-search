{"version":3,"sources":["components/Button.js","components/Form.js","Utils/API.js","components/Books.js","containers/Search.js","containers/Saved.js","components/Nav.js","containers/OverallContainer.js","App.js","registerServiceWorker.js","index.js"],"names":["Button","props","react_default","a","createElement","name","onClick","title","authors","description","value","buttonValue","Form","placeholder","onChange","API","searchBooks","query","newQuery","split","join","axios","get","getBooks","saveBook","bookData","post","deleteBook","id","delete","Books","properGrammer","useAuthors","undefinedCheck","console","log","length","src","alt","components_Button","Object","assign","buttonName","Search","state","search","books","buttonClickApi","e","_this","then","res","data","setState","objectSpread","items","updateSearch","currentTarget","defineProperty","saveToDatabase","imageSrc","_this2","this","components_Form","map","book","components_Books","volumeInfo","key","imageLinks","thumbnail","React","Component","Saved","savedBooks","loadBooks","target","_id","Nav","react_router_dom","to","react_router","exact","path","component","OverallContainer","components_Nav","App","containers_OverallContainer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ebf83444.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <div>\r\n      <button\r\n        name={props.name}\r\n        onClick={props.onClick}\r\n        title={props.title}\r\n        authors={props.authors}\r\n        description={props.description}\r\n        value={props.buttonValue}\r\n      >\r\n        {props.name}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nfunction Form(props) {\r\n  return (\r\n    <div>\r\n      <input\r\n        placeholder={props.placeholder}\r\n        name={props.name}\r\n        onChange={props.onChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  searchBooks: function(query) {\r\n    const newQuery = query.split(\" \").join(\"+\");\r\n    return axios.get(\r\n      \"https://www.googleapis.com/books/v1/volumes?q=\" + newQuery\r\n    );\r\n  },\r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  },\r\n\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books\", id);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport Image from \"./Image\";\r\n\r\nfunction Books(props) {\r\n  console.log(props);\r\n  let properGrammer;\r\n  let useAuthors;\r\n  let undefinedCheck;\r\n  let checkSource;\r\n  if (!props.authors) {\r\n    undefinedCheck = 0;\r\n  } else {\r\n    undefinedCheck = props.authors.length;\r\n  }\r\n\r\n  if (props.src != null) {\r\n    checkSource = props.src;\r\n  } else {\r\n    checkSource = \"\";\r\n  }\r\n\r\n  switch (undefinedCheck) {\r\n    case 1:\r\n      properGrammer = \"Author:\";\r\n      useAuthors = props.authors;\r\n      break;\r\n    case 0:\r\n      properGrammer = \"No authors found\";\r\n      useAuthors = \"\";\r\n      break;\r\n    default:\r\n      properGrammer = \"Authors:\";\r\n      useAuthors = props.authors.join(\", \");\r\n      break;\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>Title: {props.title}</h2>\r\n      <h4>\r\n        {properGrammer} {useAuthors}\r\n      </h4>\r\n      <p>Description: {props.description}</p>\r\n      <span>\r\n        <img src={props.src} alt={props.title} />\r\n      </span>\r\n      <Button {...props} name={props.buttonName} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Books;\r\n","import React from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport Form from \"../components/Form\";\r\nimport API from \"../Utils/API\";\r\nimport Books from \"../components/Books\";\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    search: \"\",\r\n    books: []\r\n  };\r\n\r\n  buttonClickApi = e => {\r\n    console.log(this.state);\r\n    API.searchBooks(this.state.search).then(res => {\r\n      console.log(res.data);\r\n      this.setState({ ...this.state, books: res.data.items });\r\n      console.log(\"state:\", this.state);\r\n    });\r\n  };\r\n\r\n  updateSearch = e => {\r\n    const name = e.currentTarget.name;\r\n    const value = e.currentTarget.value;\r\n    this.setState({ ...this.state, [name]: value });\r\n  };\r\n\r\n  saveToDatabase = (title, description, authors, imageSrc) => {\r\n    const bookData = { title, description, authors, imageSrc };\r\n    API.saveBook(bookData);\r\n  };\r\n\r\n  render() {\r\n    const books = this.state.books;\r\n    return (\r\n      <div>\r\n        <Form\r\n          placeholder=\"Search for a book!\"\r\n          name=\"search\"\r\n          onChange={this.updateSearch}\r\n        />\r\n        <Button name=\"search\" onClick={this.buttonClickApi} />\r\n        {books.length > 0\r\n          ? books.map(book => (\r\n              <Books\r\n                title={book.volumeInfo.title}\r\n                key={book.id}\r\n                onClick={() => {\r\n                  this.saveToDatabase(\r\n                    book.volumeInfo.title,\r\n                    book.volumeInfo.description,\r\n                    book.volumeInfo.authors,\r\n                    book.volumeInfo.imageLinks.thumbnail\r\n                  );\r\n                }}\r\n                authors={book.volumeInfo.authors}\r\n                src={book.volumeInfo.imageLinks.thumbnail}\r\n                description={book.volumeInfo.description}\r\n                buttonName=\"save\"\r\n              />\r\n            ))\r\n          : \"No Results Yet\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Search;\r\n","import React from \"react\";\r\nimport API from \"../Utils/API\";\r\nimport Button from \"../components/Button\";\r\nimport Books from \"../components/Books\";\r\n\r\nclass Saved extends React.Component {\r\n  state = {\r\n    savedBooks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  loadBooks = () => {\r\n    API.getBooks().then(res => {\r\n      console.log(res.data);\r\n      this.setState({ savedBooks: res.data });\r\n    });\r\n  };\r\n\r\n  deleteBook = e => {\r\n    API.deleteBook(e.target.value).then(this.loadBooks);\r\n  };\r\n\r\n  render() {\r\n    const books = this.state.savedBooks;\r\n    return (\r\n      <div>\r\n        {books.length > 0\r\n          ? books.map(book => (\r\n              <Books\r\n                title={book.title}\r\n                authors={book.authors}\r\n                src={book.imageSrc}\r\n                buttonName=\"delete\"\r\n                description={book.description}\r\n                buttonValue={book._id}\r\n                onClick={this.deleteBook}\r\n              />\r\n            ))\r\n          : \"nothing here yet\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Saved;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Search from \"../containers/Search\";\r\nimport Saved from \"../containers/Saved\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Link to=\"/search\">Search</Link>\r\n        <Link to=\"/saved\">Saved</Link>\r\n        <hr />\r\n        <Route exact path=\"/search\" component={Search} />\r\n        <Route exact path=\"/saved\" component={Saved} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport Nav from \"../components/Nav\";\r\nimport Search from \"./Search\";\r\nimport Saved from \"./Saved\";\r\n\r\nclass OverallContainer extends React.Component {\r\n  state = {\r\n    path: \"\"\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default OverallContainer;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport OverallContainer from \"./containers/OverallContainer.js\";\n\nclass App extends Component {\n  render() {\n    return <OverallContainer />;\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}